name: Serving API Build and Publish to GKE

on:
  push:
    branches:
      - master
    paths:
      - serving-api/**
    
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  IMAGE: serving-api
  REGISTRY_HOSTNAME: ${{ secrets.REGISTRY_HOSTNAME }}
  DEPLOYMENT_NAME: serving-api

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}
        
    - run: |
        gcloud auth configure-docker
      
    - name: Build
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          --file serving-api/Dockerfile .
           
    - name: Publish to GCR
      run: |
        docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA

    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        kubectl set image deployment/$DEPLOYMENT_NAME *=$REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
    
    - name: Log into GitHub registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Publish to GitHub Packages
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE

        # Uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        docker tag $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA $IMAGE_ID:$GITHUB_SHA
        docker push $IMAGE_ID:$GITHUB_SHA
